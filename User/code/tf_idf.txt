install.packages("tm")
library(tm)

docs <- 
  c("Saturn is the gas planet with rings.",
    "Jupiter is the largest gas planet.",
    " Saturn is the Roman god of sowing.")

names(docs) <- paste("doc", 1:length(docs), sep="") # doc이라는 변수 하나를 붙이겠다.

docs.corp <- Corpus(VectorSource(docs)) # corp 함수를 써서 문서로 바꿈

inspect(docs.corp[1:3])

docs.corp <- tm_map(docs.corp, removePunctuation) #특수문자 제거

inspect(docs.corp[1:3])

docs.corp <- tm_map(docs.corp, content_transformer(tolower)) #소문자로 바꾸는것.

inspect(docs.corp[1:3])

tdmat1 <- TermDocumentMatrix(docs.corp)
tdmat2 <- TermDocumentMatrix(docs.corp, control=list(weighting = function(x) weightTfIdf(x, TRUE),
                                                     wordLengths=c(1,Inf)))
#희귀한 단어에 가중치를 줌.

# 빈도
findFreqTerms(tdmat1)

# 연관성

findAssocs(tdmat1,"saturn",corlimit=0.01)

tdmatmat1 <- as.matrix(tdmat1)

biplot(princomp(tdmatmat1), pc.biplot=T, xlab="Dim1", ylab="Dim2",
       main="(b) PC Biplot : pc.biplot() ", cex=1.5, pch=16, col=1 )
abline(v=0,h=0)


termFreq<-rowSums(tdmatmat1)
termFreq <- subset( termFreq, termFreq>= 1)
barplot(termFreq, las=2)

# 벡터의 norm이 1이 되도록 정규화 
norm_vec <- function(x) {x/sqrt(sum(x^2))}
tdmatmat1 <- apply(tdmatmat1, 2, norm_vec)



# 문서 유사도 계산 
docord <- t(tdmatmat1[,1]) %*% tdmatmat1[,2:3]

#검색 결과 리스팅 
orders <- data.frame(docs=docs[-1],scores=t(docord) ,stringsAsFactors=FALSE)
orders[order(docord, decreasing=T),]

fit <- hclust(dist(t(tdmatmat1)), method = "ward.D")
plclust(fit)
